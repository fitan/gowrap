package {{.Interface.Name}}

// {{upFirst .Interface.Name}}Service describes the service.
{{if eq .Vars.initType "kit"}}//go:generate gowrap gen -g -p ./ -i {{upFirst .Interface.Name}}Service -bt "prometheus:{{.Interface.Name}}_with_prometheus_gen.go log:{{.Interface.Name}}_with_log_gen.go opentracing:{{.Interface.Name}}_with_trace_gen.go http-gin:{{.Interface.Name}}_http_gen.go endpoint:{{.Interface.Name}}_endpoint_gen.go"{{end}}
{{- if eq .Vars.initType "service"}}//go:generate gowrap gen -ps=false -g -p ./ -i {{upFirst .Interface.Name}}Service -bt "prometheus:{{.Interface.Name}}_with_prometheus_gen.go log:{{.Interface.Name}}_with_log_gen.go opentracing:{{.Interface.Name}}_with_trace_gen.go"{{end}}
type {{upFirst .Interface.Name}}Service interface {
}

type basic{{upFirst .Interface.Name}}Service struct {

}


type BaseService {{upFirst .Interface.Name}}Service

// NewBasic{{upFirst .Interface.Name}}Service returns a naive, stateless implementation of {{upFirst .Interface.Name}}Service.
func NewBasicService() BaseService {
	return &basic{{upFirst .Interface.Name}}Service{
	}
}